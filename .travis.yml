notifications:
  email: false

sudo: required

language: php

php:
  - 7.0
  - 7.1

services:
  - docker

env:
  - DOCKER_COMPOSE_VERSION=1.14.0

cache:
  directories:
    - $HOME/.composer/cache

before_install:
  - composer self-update
  - composer --version
  - composer install

  # Print out the current docker-compose version. Once this reports 1.6+ then we
  # do not need the following steps.
  - docker-compose --version

  # As of the writing of this script Travis has docker-compose v1.4.2, we need
  # to update it to 1.8+. $DOCKER_COMPOSE_VERSION is provide from the `env`
  # above.
  - sudo rm /usr/local/bin/docker-compose
  - curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-`uname -s`-`uname -m` > docker-compose
  - chmod +x docker-compose
  - sudo mv docker-compose /usr/local/bin

  # Check that docker-compose is now running the latest version (or at least the
  # one we specified). This is not to be confused with the version we printed
  # before doing the update.
  - docker-compose --version

  # Setup your application stack. You may need to tweak these commands if you
  # doing out-of-the-ordinary docker-compose builds.
  - docker-compose up --build -d

  # You will want this for logging. If one of your containers does not build for
  # whatever reason it's best to report that now before your tests start
  # otherwise it can be really tricky to debug why tests are failing sometimes.
  - docker ps

  # This is just our script to setup all the database tables and other fixtures
  # we need. You should remove this if it's not necessary or you have other
  # scripts handling this.
  - docker exec -it web /t3kit_db/setupdb.sh